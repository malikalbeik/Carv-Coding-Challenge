firestore: {
  eventsCollection: {
    events: {
      shape: sql_table
      id: "String (Event ID)" {constraint: primary_key}
      name: "String"
      description: "String"
      start_time: "Timestamp"
      end_time: "Timestamp"
      available_tickets: "Number"
      total_tickets: "Number"
      price: "Number"
      tickets: "List of Tickets"
    }

    ticketsSubcollection: {
      shape: sql_table
      id: "String (Ticket ID)" {constraint: primary_key}
      event_id: "Reference to Event" {constraint: foreign_key}
      status: "Enum (Available, Sold, Onhold)"
    }
  }

  usersCollection: {
    users: {
      shape: sql_table
      id: "String (User ID)" {constraint: primary_key}
      name: "String"
      email: "String"
      purchases: "List of Purchases"
    }
    purchasesSubCollection: {
      shape: sql_table
      id: "String (Purchase ID)" {constraint: primary_key}
      event_id: "Reference to Event" {constraint: foreign_key}
      ticket_id: "Reference to Ticket" {constraint: foreign_key}
      purchase_status: "Enum (Active, Cancelled)"
      purchase_time: "Timestamp"
    }
  }
}

firestore.eventsCollection.events.tickets -> firestore.eventsCollection.ticketsSubcollection: "SubCollection"
firestore.usersCollection.users.purchases -> firestore.usersCollection.purchasesSubCollection: "SubCollection"
firestore.usersCollection.purchasesSubCollection.event_id -> firestore.eventsCollection.events: "Event Purchased"
firestore.usersCollection.purchasesSubCollection.ticket_id -> firestore.eventsCollection.ticketsSubcollection: "Ticket Purchased"
