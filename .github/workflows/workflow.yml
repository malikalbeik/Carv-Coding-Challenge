name: 'Terraform'

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: dev

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Setup terraform variables
      id: vars
      run: |-
        cat > pipeline.auto.tfvars <<EOF
        project_name="${{vars.FIREBASE_PROJECT_NAME}}"
        project_id="${{vars.FIREBASE_PROJECT_ID}}"
        web_app_display_name="${{vars.FIREBASE_WEB_APP_DISPLAY_NAME}}"
        firestore_region="${{vars.FIRESTORE_REGION}}"
        organization_id="${{vars.ORGANIZATION_ID}}"
        billing_account="${{vars.BILLING_ACCOUNT}}"
        EOF
        
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init -backend-config="bucket=${{vars.TF_BUCKET}}" -backend-config="prefix=${{vars.TF_PREFIX}}"
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }} 


    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      # On push to "main", build or change infrastructure according to Terraform configuration files
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

  build-and-deploy-firebase:
    needs: terraform
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to Firebase
      uses: w9jds/firebase-action@master
      with:
        args: deploy --message \"${{ github.event.head_commit.message }}\" --only functions
      env:
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        PROJECT_ID: ${{vars.FIREBASE_PROJECT_ID}}